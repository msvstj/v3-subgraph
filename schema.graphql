type Token @entity {
  # token address
  id: ID!
  # token symbol
  symbol: String!
  # token name
  name: String!
  # token decimals
  decimals: BigInt!
}

type Pool @entity {
  # pool address
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # block pool was created at
  createdAtBlockNumber: BigInt!
  # token0
  token0: Token!
  # token1
  token1: Token!
  # fee amount
  feeTier: BigInt!
  # derived fields
  incentives: [Incentive!]! @derivedFrom(field: "pool")
}

type Position @entity {
  # Positions created through NonfungiblePositionManager
  # NFT token id
  id: ID!
  # owner of the NFT
  owner: Bytes!
  # pool position is within
  pool: Pool!
  # timestamp position was created at
  createdAtTimestamp: BigInt!
  # block position was created at
  createdAtBlockNumber: BigInt!
  # allow indexing by tokens
  token0: Token!
  # allow indexing by tokens
  token1: Token!
  # array of incentive pointers where the position is staked
  incentives: [Incentive]!
  # token depositor in the staking contract
  depositor: Bytes
}

type Incentive @entity {
  # incentive ID
  id: ID!
  # creation
  createdAtTimestamp: BigInt!
  # block incentive was created at
  createdAtBlockNumber: BigInt!
  # pool of incentive 
  pool: Pool!
  # incentive start time
  startTime: BigInt!
  # incentive end time
  endTime: BigInt!
  # refundee wallet address
  refundee: Bytes!
  # reward token
  rewardToken: Token!
  # reward amount
  reward: BigInt!
  # pointers of staked positions
  positions: [Position]!
  # incentive ended to retrieve remaining tokens
  ended: Boolean!
}
